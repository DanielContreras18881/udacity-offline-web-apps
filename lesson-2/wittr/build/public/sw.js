(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

self.addEventListener('install', function (event) {
  var urlsToCache = ['/', 'js/main.js', 'css/main.css', 'imgs/icon.png', 'https://fonts.gstatic.com/s/roboto/v15/2UX7WLTfW3W8TclTUvlFyQ.woff', 'https://fonts.gstatic.com/s/roboto/v15/d-6IYplOFocCacKzxwXSOD8E0i7KZn-EPnyo3HZu7kw.woff'];

  event.waitUntil(
  // TODO: open a cache named 'wittr-static-v1'
  // Add cache the urls from urlsToCache
  caches.open('wittr-static-v1').then(function (cache) {
    cache.addAll(urlsToCache);
  }));
});

self.addEventListener('fetch', function (event) {
  // Leave this blank for now.
  // We'll get to this in the next task.
});

},{}],2:[function(require,module,exports){
"use strict";

var r = FetchEvent.prototype.respondWith;
FetchEvent.prototype.respondWith = function () {
  return new URL(this.request.url).search.endsWith("bypass-sw") ? void 0 : r.apply(this, arguments);
};

},{}]},{},[1,2])

//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJEOi9Eb2N1bWVudHMvU2Nob29sL1VkYWNpdHkvY291cnNlcy9vZmZsaW5lLWFwcGxpY2F0aW9ucy9sZXNzb24tMi93aXR0ci9wdWJsaWMvanMvc3cvaW5kZXguanMiLCJEOi9Eb2N1bWVudHMvU2Nob29sL1VkYWNpdHkvY291cnNlcy9vZmZsaW5lLWFwcGxpY2F0aW9ucy9sZXNzb24tMi93aXR0ci9wdWJsaWMvanMvc3cvcHJlcm9sbC9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0FDQUEsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxVQUFTLEtBQUssRUFBRTtBQUMvQyxNQUFJLFdBQVcsR0FBRyxDQUNoQixHQUFHLEVBQ0gsWUFBWSxFQUNaLGNBQWMsRUFDZCxlQUFlLEVBQ2Ysb0VBQW9FLEVBQ3BFLHlGQUF5RixDQUMxRixDQUFDOztBQUVGLE9BQUssQ0FBQyxTQUFTOzs7QUFHYixRQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQzdCLElBQUksQ0FBQyxVQUFTLEtBQUssRUFBQztBQUNwQixTQUFLLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0dBQzFCLENBQUMsQ0FDSCxDQUFDO0NBQ0gsQ0FBQyxDQUFDOztBQUVILElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsVUFBUyxLQUFLLEVBQUU7OztDQUc5QyxDQUFDLENBQUM7Ozs7O0FDdkJILElBQUksQ0FBQyxHQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFBO0FBQ3RDLFVBQVUsQ0FBQyxTQUFTLENBQUMsV0FBVyxHQUFDLFlBQVU7QUFBQyxTQUFPLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsR0FBQyxLQUFLLENBQUMsR0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksRUFBQyxTQUFTLENBQUMsQ0FBQTtDQUFDLENBQUEiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwic2VsZi5hZGRFdmVudExpc3RlbmVyKCdpbnN0YWxsJywgZnVuY3Rpb24oZXZlbnQpIHtcclxuICB2YXIgdXJsc1RvQ2FjaGUgPSBbXHJcbiAgICAnLycsXHJcbiAgICAnanMvbWFpbi5qcycsXHJcbiAgICAnY3NzL21haW4uY3NzJyxcclxuICAgICdpbWdzL2ljb24ucG5nJyxcclxuICAgICdodHRwczovL2ZvbnRzLmdzdGF0aWMuY29tL3Mvcm9ib3RvL3YxNS8yVVg3V0xUZlczVzhUY2xUVXZsRnlRLndvZmYnLFxyXG4gICAgJ2h0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb20vcy9yb2JvdG8vdjE1L2QtNklZcGxPRm9jQ2FjS3p4d1hTT0Q4RTBpN0tabi1FUG55bzNIWnU3a3cud29mZidcclxuICBdO1xyXG5cclxuICBldmVudC53YWl0VW50aWwoXHJcbiAgICAvLyBUT0RPOiBvcGVuIGEgY2FjaGUgbmFtZWQgJ3dpdHRyLXN0YXRpYy12MSdcclxuICAgIC8vIEFkZCBjYWNoZSB0aGUgdXJscyBmcm9tIHVybHNUb0NhY2hlXHJcbiAgICBjYWNoZXMub3Blbignd2l0dHItc3RhdGljLXYxJylcclxuICAgIC50aGVuKGZ1bmN0aW9uKGNhY2hlKXtcclxuICAgIFx0Y2FjaGUuYWRkQWxsKHVybHNUb0NhY2hlKTtcclxuICAgIH0pXHJcbiAgKTtcclxufSk7XHJcblxyXG5zZWxmLmFkZEV2ZW50TGlzdGVuZXIoJ2ZldGNoJywgZnVuY3Rpb24oZXZlbnQpIHtcclxuICAvLyBMZWF2ZSB0aGlzIGJsYW5rIGZvciBub3cuXHJcbiAgLy8gV2UnbGwgZ2V0IHRvIHRoaXMgaW4gdGhlIG5leHQgdGFzay5cclxufSk7IiwidmFyIHI9RmV0Y2hFdmVudC5wcm90b3R5cGUucmVzcG9uZFdpdGhcclxuRmV0Y2hFdmVudC5wcm90b3R5cGUucmVzcG9uZFdpdGg9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IFVSTCh0aGlzLnJlcXVlc3QudXJsKS5zZWFyY2guZW5kc1dpdGgoXCJieXBhc3Mtc3dcIik/dm9pZCAwOnIuYXBwbHkodGhpcyxhcmd1bWVudHMpfSJdfQ==